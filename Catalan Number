package Catalan;

public class GUNJIVAMSIAVINASHquiz1 {
	public static int CatalanWhile(int N)
	//Purpose: To compute the N th Catalan number
	{
		if (N==0)
		{return(1);}
		else if (N==1)
		{return (1);}
		else
	{
		int n=N;
		//Purpose: Last catalan # computed
		int res=1;
		//Purpose: Initial is always one when starting with Catalan numbers.
		int f1= 1;
		//INV: Catalan=  2(2n-1)/(n+1) Catalan(n-1)
		//INV: res== f1(n)*Catalan(n-1) && f1= (2*((2*n)-1))/(n+1)
		while (n!=1)
		{
			//:res== f1(n)*Catalan(n-1) && f1= (2*((2*n)-1))/(n+1)
			int temp= f1;
			//res== f1(n)*Catalan(n-1) && f1= (2*((2*n)-1))/(n+1)&& temp= (2*((2*n)-1))/(n+1)
			res= res * temp;
			//res== f1(n)*(f1(n)*Catalan(n-1)) && f1= (2*((2*n)-1))/(n+1)&& temp= (2*((2*n)-1))/(n+1)
			//res== f1(n)*Catalan(n) && f1= (2*((2*n)-1))/(n+1)&& temp= (2*((2*n)-1))/(n+1)
			n=n-1;
			////res== f1(n)*Catalan(n) && f1= (2*((2*n-1)-1))/(n+1)&& temp= (2*((2*n)-1))/(n+1)
			////res== f1(n-1)*Catalan(n-1) && f1= (2*((2*n-1)-1))/(n+1)&& temp= (2*((2*n)-1))/(n+1)
			res= res*f1;
		}
		{return res;
		}
			
		}
		
		
		
	}
	//Termination Argument: If the numbers starts from N , eventually it calculates the values and finds the values  and when it comes to 1, it stops returning 1.

}




import java.util.Scanner;
class Catalan
{
	public static void main(String[ ] args)
{
		Scanner in=new Scanner (System.in);
int n=in.nextInt();
long n1,n2,a;
long CatNumber=0;
int cnt=1;
    a=1;
if(n>=1)
{
while(a<=n)
{
long factofa=1,factof2a=1;
for(long i=1;i<=a;i++)
factofa*=i;
for(long i=1;i<=2*a;i++)
factof2a*=i;
CatNumber=factof2a/((factofa*factofa)*(a+1));
a++;
}
System.out.println(CatNumber);
}
}
}

package Catalan;

import static org.junit.Assert.*;

import org.junit.Test;


public class GUNJIVAMSIAVINASHquiz1tests {

	@Test
	public void test() {
		assertEquals(GUNJIVAMSIAVINASHquiz1.CatalanWhile(0),1);
		assertEquals(GUNJIVAMSIAVINASHquiz1.CatalanWhile(4),14);
	}

}
